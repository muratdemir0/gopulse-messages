
services:
  server:
    build:
      context: .
      target: final
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=dev
      - DATABASE_DSN=postgres://postgres:postgres@db:5432/gopulse_messages?sslmode=disable
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
    restart: unless-stopped
    networks:
      - gopulse-network

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: gopulse_messages
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gopulse_messages"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gopulse-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gopulse-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  gopulse-network:
    driver: bridge

